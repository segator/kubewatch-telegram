apiVersion: v1
kind: ServiceAccount
metadata:
  name: telegram-kubewatch
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: telegram-kubewatch
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get","watch","list"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get","watch","list"]  
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: telegram-kubewatch-viewer
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: telegram-kubewatch
subjects:
  - kind: ServiceAccount
    name: telegram-kubewatch
    namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: telegram-kubewatch
  namespace: kube-system
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: telegram-kubewatch
    spec:
      serviceAccountName: telegram-kubewatch
      containers:
        - name: telegram-kubewatch
          image: segator/telegram-kubewatch
          imagePullPolicy: Always
          env:
            - name: K8S_SERVICE
              value: "true"
            - name: RESOURCES
              value: "pods events"
            - name: TELEGRAM_API
              valueFrom:
                secretKeyRef:
                  name: telegram-bot
                  key: api
            - name: TELEGRAM_GROUPID
              valueFrom:
                secretKeyRef:
                  name: telegram-bot
                  key: group
